library(dplyr)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
top_n(5,country)%>%
ggplot(data_combined,mapping =aes(x = country,y = count))+
geom_col(binwidth = 0.5)+
ggtitle("Various countries in producing films")
library(dplyr)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
top_n(10,country)
ggplot(data_combined,mapping = aes(x = country,y = rating))+
geom_tile()
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
top_n(10,country)%>%
arrange(desc(rating))%>%
ungroup()%>%
ggplot(data_combined,mapping = aes(x = country,y = rating))+
geom_tile()
data_combined%>%
select(rating,country)%>%
group_by(country)%>%
summarise(count= n())%>%
ungroup()%>%
ggplot(data_combined,mapping = aes(x = country,y = rating))+
geom_tile()
data_combined%>%
select(rating,country)%>%
group_by(country)%>%
summarise(count= n())%>%
ungroup()
data_combined$country<-as.character(data_combined$country)
glimpse(data_combined)
str(data_combined)
data_combined$duration<-as.factor(data_combined$duration)
str(data_combined)
library(dplyr)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
top_n(10,country)%>%
ggplot(data_combined,mapping =aes(x = country,y = count))+
geom_col(binwidth = 0.5)+
ggtitle("Various countries in producing films")
data_combined%>%
select(rating,country)%>%
group_by(country)%>%
summarise(count= n())%>%
ungroup()%>%
ggplot(data_combined,mapping = aes(x = country,y = rating))+
geom_tile()
data_combined%>%
select(rating,country)%>%
summarise(count= n())%>%
ggplot(data_combined,mapping = aes(x = country,y = rating))+
geom_tile()
data_combined%>%
group_by(country)%>%
mutate(vex = mean(country))
select(rating,country)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(country))
select(rating,country)%>%
ggplot(data_combined,mapping = aes(x = country,y = rating))+
geom_tile()
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))
select(rating,country)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))
select(rating,country)%>%
ggplot(data_combined,mapping = aes(x = country,y = data_combined$rating))+
geom_tile()
ggplot(data_combined,mapping = aes(x = country,y = data_combined$rating))+
geom_tile()
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))
select(rating,country)%>%
ggplot(data_combined,mapping = aes(x = country,y = data_combined$rating))+
geom_tile()
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))
select(country)%>%
ggplot(data_combined,mapping = aes(x = country,y = data_combined$rating))+
geom_tile()
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))%>%
ggplot(data_combined,mapping = aes(x = country,y = data_combined$rating))+
geom_tile()
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))%>%
ggplot(data_combined,mapping = aes(x = country,y = data_combined$rating,fill = count))+
geom_tile()
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = count()))+
geom_tile()
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))%>%
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = count()))+
geom_tile()
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = count(Country)))+
geom_tile()
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = count(country)))+
geom_tile()
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = count(rating)))+
geom_tile()
count(rating)
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = count(type)))+
geom_tile()
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = type))+
geom_tile()
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = type))+
geom_col()
ggplot(data_combined,aes(type))+
geom_histogram(binwidth = 0.5)
data_combined%>%
group_by(type)%>%
summarise(count= n())%>%
ggplot(data_combined,aes(type))+
geom_histogram(binwidth = 0.5)
data_combined%>%
group_by(type)%>%
summarise(count= n())%>%
ggplot(data_combined,mapping = aes(type))+
geom_histogram(binwidth = 0.5)
data_combined%>%
group_by(type)%>%
summarise(count= n())%>%
ggplot(data_combined,mapping = aes(type))+
geom_col()
data_combined%>%
group_by(type)%>%
summarise(count= n())%>%
ggplot(data_combined,mapping = aes(x = type,y = count))+
geom_col()
data_combined%>%
group_by(rating)%>%
summarise(count= n())%>%
ggplot(data_combined,mapping = aes(x = rating,y = count,fill = type))+
geom_col()
data_combined%>%
group_by(rating)%>%
summarise(count= n())%>%
ggplot(data_combined,mapping = aes(x = rating,y = count))+
geom_col()
ggplot(data_combined,mapping = aes(x =count(rating)))+
geom_histogram()
ggplot(data_combined,mapping = aes(x = rating))+
geom_histogram()
ggplot(data_combined,mapping = aes(x = rating))+
geom_histogram(stat = count)
ggplot(data_combined,mapping = aes(x = rating))+
geom_histogram(stat = "count")
ggplot(data_combined,mapping = aes(x = rating,fill = type))+
geom_histogram(stat = "count")
data_combined%>%
group_by(rating)%>%
summarise(count= n())
#rating contains 1 NA
sum(is.na(type))
#rating contains 1 NA
sum(is.na(data_combined$type))
sum(is.na(data_combined$release_year))
ggplot(data_combined,mapping = aes(x = release_year,y = rating,fill = type))+
geom_col()
ggplot(data_combined,mapping = aes(x = release_year,y = rating))+
geom_col()+
facet_wrap(~type)
ggplot(data_combined,mapping = aes(x = year))+
geom_histogram(stat = "count")+
facet_wrap(~type)
ggplot(data_combined,mapping = aes(x = release_year))+
geom_histogram(stat = "count",binwidth = 0.5)+
facet_wrap(~type)
ggplot(data_combined,mapping = aes(x = release_year,fill = type))+
geom_histogram(stat = "count",binwidth = 0.5)+
ggplot(data_combined,mapping = aes(x = release_year,fill = type))+
geom_histogram(stat = "count",binwidth = 0.5)
ggplot(data_combined,mapping = aes(x = release_year))+
geom_histogram(stat = "count",binwidth = 0.5,fill=type)
ggplot(data_combined,mapping = aes(x = release_year,color = type))+
geom_histogram(stat = "count",binwidth = 0.5)
form<-type~rating+release
form<-type~rating+release
class(form)
form<-type~rating+release
form
class(form)
model<-ranger(form,data_combined[1:113,],num.trees = 500,respect.unordered.factors = "order")
library(ranger)
form<-type~rating+release
form
class(form)
model<-ranger(form,data_combined[1:113,],num.trees = 500,respect.unordered.factors = "order")
library(ranger)
form<-type~rating+release
form
class(form)
model<-ranger(form,data_combined[1:113,],num.trees = 500,respect.unordered.factors = "order")
model<-ranger(type~rating+release,data_combined[1:113,],num.trees = 500,respect.unordered.factors = "order")
model<-ranger(type~rating+release,data_combined[1:113,],num.trees = 500,respect.unordered.factors = "order",drop = FALSE)
View(data_combined)
View(nettrain)
str(data_combined)
library(readxl)
nettrain <- read_excel("nettrain.xlsx")
View(nettrain)
model<-ranger(type~rating+release,nettrain,num.trees = 500,respect.unordered.factors = "order",drop = FALSE)
model<-ranger(type~rating+release,nettrain,num.trees = 500,respect.unordered.factors = "order")
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
View(nettest)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
mer<-predict(model,nettest$type)
table(mer)
library(readxl)
nettest <- read_excel("nettest.xlsx")
View(nettest)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
mer<-predict(model,nettest$type)
table(mer)
pot<-as.data.frame(release_year = 2017,rating = "PG")
mer<-predict(model,pot)
table(mer)
pot<-as.data.frame(release_year = 2017,rating = "PG")
mer<-predict(model,pot)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-as.data.frame(release_year = 2017,rating = "PG")
mer<-predict(model,nettrain$type)
table(mer)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-as.data.frame(release_year = 2017,rating = "PG")
nettrain$type<-predict(model,nettrain$type)
table(mer)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
library(ranger)
form<-type~rating+release
form
class(form)
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
library(ranger)
form<-type~rating+release
form
class(form)
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-as.data.frame(release_year = 2017,rating = "PG")
ft<-predict(model,data = nettest)
table(nettest$type,predictions(ft))
library(readxl)
nettest <- read_excel("nettest.xlsx")
View(nettest)
ggplot(data_combined,mapping = aes(x = release_year,color = type))+
geom_histogram(stat = "count",binwidth = 0.5)
library(ranger)
form<-type~rating+release
form
class(form)
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-as.data.frame(release_year = 2017,rating = "PG")
ft<-predict(model,data = nettest)
table(nettest$type,predictions(ft))
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-as.data.frame(release_year = 2017,rating = "PG")
ft<-predict(model,data = nettest)
table(nettest$type,predictions(ft))
table(ft)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(readxl)
library(ranger)
train<-read_excel("nettrain.xlsx",header = TRUE,stringAsFactors = FALSE)
view(train)
test<-read_excel("nettest.xlsx")
view(test)
data_combined<-rbind(train,test)
data_combined
view(data_combined)
str(data_combined)
data_combined$rating<-as.factor(data_combined$rating)
str(data_combined)
data_combined$listed_in<-as.factor(data_combined$listed_in)
str(data_combined)
data_combined$type<-as.factor(data_combined$type)
str(data_combined)
glimpse(data_combined)
data_combined$country<-as.character(data_combined$country)
glimpse(data_combined)
str(data_combined)
data_combined$duration<-as.factor(data_combined$duration)
str(data_combined)
library(dplyr)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
top_n(10,country)%>%
ggplot(data_combined,mapping =aes(x = country,y = count))+
geom_col(binwidth = 0.5)+
ggtitle("Various countries in producing films")
count(darating)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))%>%
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = type))+
geom_col()
data_combined%>%
group_by(rating)%>%
summarise(count= n())
#rating contains 1 NA
sum(is.na(data_combined$type))
sum(is.na(data_combined$release_year))
ggplot(data_combined,mapping = aes(x = rating,fill = type))+
geom_histogram(stat = "count")
ggplot(data_combined,mapping = aes(x = release_year,color = type))+
geom_histogram(stat = "count",binwidth = 0.5)
library(ranger)
form<-type~rating+release
form
class(form)
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-as.data.frame(release_year = 2017,rating = "PG")
ft<-predict(model,data = nettest)
table(nettest$type,predictions(ft))
table(ft)
library(randomForest)
rd2<-randomForest(type~rating+release_year,data= nettrain,ntree = 500,keep.forest = FALSE,importance = FALSE)
library(randomForest)
rd2<-randomForest(type~rating+release_year,data= nettrain,ntree = 500,keep.forest = FALSE,importance = FALSE,respect.unordered.factors = "order")
rd2
library(randomForest)
rd2<-randomForest(type~rating+release_year,data= nettrain,ntree = 500,keep.forest = FALSE,importance = FALSE,respect.unordered.factors = "order")
rd2
install.packages("nnet")
set.seed(1234)
library(nnet)
rt<-nnet(type~rating+release_year,data = nettrain,size = 3)
rt
library(readxl)
nettrain <- read_excel("nettrain.xlsx")
View(nettrain)
set.seed(1234)
library(nnet)
rt<-nnet(type~rating+release_year,data = nettrain,size = 3)
rt
table(nettrain$type,predict(rt,nettrain))
set.seed(1234)
library(nnet)
rt<-nnet(type~rating+release_year,data = nettrain,size = 3)
rt
table(nettrain$type,predict(rt,nettrain))
?nnet
set.seed(1234)
library(nnet)
rt<-nnet(type~...,data = nettrain,size = 3)
rt
table(nettrain$type,predict(rt,nettrain))
set.seed(1234)
library(nnet)
rt<-nnet(type~...,data = nettrain,size = 3)
rt
table(nettrain$type,predict(rt,nettrain,type = "class"))
set.seed(1234)
library(nnet)
rt<-nnet(type~...,data = nettrain,size = 3)
rt
table(nettrain$type,predict(rt,nettrain,type = "class"))
set.seed(1234)
library(nnet)
rt<-nnet(type~...,data = nettrain,size = 3)
rt
table(nettrain$type,predict(rt,nettrain,type = "class"))
library(randomForest)
library(ggplot2)
library(dplyr)
mtg<-randomForest(mpg~ .,data = mtcars,ntree =1000,keep.forest = FALSE,importance=FALSE)
library(randomForest)
library(ggplot2)
library(dplyr)
set.seed(1234)
mtg<-randomForest(mpg~ .,data = mtcars,ntree =1000,keep.forest = FALSE,importance=FALSE)
ft<-predict(mtg,data = mtcars$mpg )
table(mtcars$mpg,predictions(ft))
table(ft)
set.seed(1234)
mtg<-randomForest(mpg~ .,data = mtcars,ntree =1000,keep.forest = FALSE,importance=FALSE)
mtg
install.packages("party")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(readxl)
library(ranger)
train<-read_excel("nettrain.xlsx",header = TRUE,stringAsFactors = FALSE)
view(train)
test<-read_excel("nettest.xlsx")
view(test)
data_combined<-rbind(train,test)
data_combined
view(data_combined)
str(data_combined)
data_combined$rating<-as.factor(data_combined$rating)
str(data_combined)
data_combined$listed_in<-as.factor(data_combined$listed_in)
str(data_combined)
data_combined$type<-as.factor(data_combined$type)
str(data_combined)
glimpse(data_combined)
data_combined$country<-as.character(data_combined$country)
glimpse(data_combined)
str(data_combined)
data_combined$duration<-as.factor(data_combined$duration)
str(data_combined)
library(dplyr)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
top_n(10,country)%>%
ggplot(data_combined,mapping =aes(x = country,y = count))+
geom_col(binwidth = 0.5)+
ggtitle("Various countries in producing films")
count(darating)
data_combined%>%
group_by(country)%>%
summarise(count= n())%>%
mutate(vex = mean(count))%>%
ggplot(data_combined,mapping = aes(x = country,y = rating,fill = type))+
geom_col()
data_combined%>%
group_by(rating)%>%
summarise(count= n())
#rating contains 1 NA
sum(is.na(data_combined$type))
sum(is.na(data_combined$release_year))
ggplot(data_combined,mapping = aes(x = rating,fill = type))+
geom_histogram(stat = "count")
ggplot(data_combined,mapping = aes(x = release_year,color = type))+
geom_histogram(stat = "count",binwidth = 0.5)
library(ranger)
form<-type~rating+release
form
class(form)
set.seed(1234)
model<-ranger(type~rating+release_year,nettrain,num.trees = 500,respect.unordered.factors = "order")
model
#pot<-as.data.frame(release_year = 2017,rating = "PG")
ft<-predict(model,data = nettest)
table(nettest$type,predictions(ft))
table(ft)
set.seed(1234)
library(nnet)
rt<-nnet(type~...,data = nettrain,size = 3)
rt
table(nettrain$type,predict(rt,nettrain,type = "class"))
